"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[7277],{3905:(e,t,l)=>{l.d(t,{Zo:()=>d,kt:()=>h});var n=l(7294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function s(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):s(s({},t),e)),l},d=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},E=n.forwardRef((function(e,t){var l=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(l),E=r,h=c["".concat(o,".").concat(E)]||c[E]||p[E]||a;return l?n.createElement(h,s(s({ref:t},d),{},{components:l})):n.createElement(h,s({ref:t},d))}));function h(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=l.length,s=new Array(a);s[0]=E;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=l[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,l)}E.displayName="MDXCreateElement"},955:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=l(7462),r=(l(7294),l(3905));const a={layout:"default",title:"DELETE",nav_order:8,description:"The DELETE clause is used to delete vertices and edges"},s="Delete",i={unversionedId:"Clauses/DELETE",id:"Clauses/DELETE",title:"DELETE",description:"The DELETE clause is used to delete vertices and edges",source:"@site/docs/03-Clauses/07-DELETE.md",sourceDirName:"03-Clauses",slug:"/Clauses/DELETE",permalink:"/docs/Clauses/DELETE",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/03-Clauses/07-DELETE.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{layout:"default",title:"DELETE",nav_order:8,description:"The DELETE clause is used to delete vertices and edges"},sidebar:"tutorialSidebar",previous:{title:"REMOVE",permalink:"/docs/Clauses/REMOVE"},next:{title:"MERGE",permalink:"/docs/Clauses/MERGE"}},o={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Delete a Single Vertex",id:"delete-a-single-vertex",level:2},{value:"Query",id:"query",level:3},{value:"Result",id:"result",level:3},{value:"Delete Edges Only",id:"delete-edges-only",level:2},{value:"Query",id:"query-1",level:3},{value:"Result",id:"result-1",level:3},{value:"Delete a vertex with all its edges",id:"delete-a-vertex-with-all-its-edges",level:2},{value:"Query",id:"query-2",level:3},{value:"Result",id:"result-2",level:3},{value:"Delete all Vertices and Edges",id:"delete-all-vertices-and-edges",level:2},{value:"Query",id:"query-3",level:3},{value:"Result",id:"result-3",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...l}=e;return(0,r.kt)(c,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"delete"},"Delete"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"For removing properties and labels, see the REMOVE clause."),(0,r.kt)("p",null,"It is not possible to delete vertices with edges connected to them without also deleting the edges. This can be done by either explicitly deleting specific edges, or by using the DETACH DELETE clause."),(0,r.kt)("h2",{id:"delete-a-single-vertex"},"Delete a Single Vertex"),(0,r.kt)("p",null,"To delete a single vertex, use the DELETE clause:"),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('delete', $$\n    MATCH (n:Person {name: 'Tom Hanks'})\n    DELETE n\n$$) as (n gtype);\n")),(0,r.kt)("p",null,"This deletes the Person vertex Tom Hanks. This query is only possible to run on vertices without any edges connected to them."),(0,r.kt)("h3",{id:"result"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"n")))),(0,r.kt)("h2",{id:"delete-edges-only"},"Delete Edges Only"),(0,r.kt)("p",null,"It is possible to delete a edge while leaving the vertex(s) connected to that edge otherwise unaffected."),(0,r.kt)("h3",{id:"query-1"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('delete', $$\n    MATCH (n:Person {name: 'Laurence Fishburne'})-[r:ACTED_IN]->()\n    DELETE r\n$$) as (n gtype);\n")),(0,r.kt)("p",null,"This deletes all outgoing ACTED_IN edges from the Person vertex Laurence Fishburne, without deleting the vertex."),(0,r.kt)("h3",{id:"result-1"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"n")))),(0,r.kt)("h2",{id:"delete-a-vertex-with-all-its-edges"},"Delete a vertex with all its edges"),(0,r.kt)("p",null,"To delete vertices and any edges connected them, use the DETACH DELETE clause."),(0,r.kt)("h3",{id:"query-2"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('delete', $$\n    MATCH (n:Person {name: 'Carrie-Anne Moss'})\n    DETACH DELETE n\n$$) as (n gtype);\n")),(0,r.kt)("p",null,"This deletes the Person vertex Carrie-Anne Moss and all edges connected to it."),(0,r.kt)("h3",{id:"result-2"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"n")))),(0,r.kt)("h2",{id:"delete-all-vertices-and-edges"},"Delete all Vertices and Edges"),(0,r.kt)("p",null,"It is possible to delete all vertices and edges in a graph."),(0,r.kt)("h3",{id:"query-3"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('delete', $$\n    MATCH (n)\n    DETACH DELETE n\n$$) as (n gtype);\n")),(0,r.kt)("h3",{id:"result-3"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"n")))))}p.isMDXComponent=!0}}]);
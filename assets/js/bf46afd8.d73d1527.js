"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[6839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(u,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={layout:"default",title:"Numeric Functions",nav_order:1,description:"Numeric Functions for PostGraph"},o="Numeric Functions -",l={unversionedId:"Functions/numeric-functions",id:"Functions/numeric-functions",title:"Numeric Functions",description:"Numeric Functions for PostGraph",source:"@site/docs/04-Functions/04-numeric-functions.md",sourceDirName:"04-Functions",slug:"/Functions/numeric-functions",permalink:"/docs/Functions/numeric-functions",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/04-Functions/04-numeric-functions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{layout:"default",title:"Numeric Functions",nav_order:1,description:"Numeric Functions for PostGraph"},sidebar:"tutorialSidebar",previous:{title:"List Functions",permalink:"/docs/Functions/list-functions"},next:{title:"Aggregating Functions",permalink:"/docs/Functions/aggregating-functions"}},u={},s=[{value:"Abs()",id:"abs",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Returns",id:"returns",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Considerations",id:"considerations",level:3},{value:"Example 1. abs()",id:"example-1-abs",level:3},{value:"Query",id:"query",level:4},{value:"Result",id:"result",level:4}],c={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"numeric-functions--"},"Numeric Functions -"),(0,a.kt)("h1",{id:"functions"},"Functions"),(0,a.kt)("h2",{id:"abs"},"Abs()"),(0,a.kt)("p",null,"abs() returns the absolute value of the given number."),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"abs(expression)")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"The type of the value returned will be that of expression.")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,a.kt)("h3",{id:"considerations"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"abs(null) returns null."),(0,a.kt)("li",{parentName:"ul"},"If expression is negative, -(expression) (i.e. the negation of expression) is returned.")),(0,a.kt)("h3",{id:"example-1-abs"},"Example 1. abs()"),(0,a.kt)("h4",{id:"query"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\n    MATCH (a), (e)\n    WHERE a.name = 'Alice' AND e.name = 'Eskil'\n    RETURN a.age, e.age, abs(a.age - e.age)\n$$) as (a_age gtype, e_type, diff_age);\n")),(0,a.kt)("p",null,"The absolute value of the age difference is returned."),(0,a.kt)("h4",{id:"result"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"a_age"),(0,a.kt)("th",{parentName:"tr",align:"center"},"e_age"),(0,a.kt)("th",{parentName:"tr",align:"right"},"diff_age"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"38"),(0,a.kt)("td",{parentName:"tr",align:"center"},"41"),(0,a.kt)("td",{parentName:"tr",align:"right"},"3")))))}m.isMDXComponent=!0}}]);
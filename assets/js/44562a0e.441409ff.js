"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[2319],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(r),m=n,y=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return r?a.createElement(y,p(p({ref:t},u),{},{components:r})):a.createElement(y,p({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,p=new Array(l);p[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:n,p[1]=o;for(var s=2;s<l;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4158:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const l={layout:"default",title:"SET",nav_order:6,description:"The SET clause is used to update labels on vertices and properties on vertices and edges."},p="SET Clause",o={unversionedId:"Clauses/SET",id:"Clauses/SET",title:"SET",description:"The SET clause is used to update labels on vertices and properties on vertices and edges.",source:"@site/docs/03-Clauses/05-SET.md",sourceDirName:"03-Clauses",slug:"/Clauses/SET",permalink:"/docs/Clauses/SET",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/03-Clauses/05-SET.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{layout:"default",title:"SET",nav_order:6,description:"The SET clause is used to update labels on vertices and properties on vertices and edges."},sidebar:"tutorialSidebar",previous:{title:"CREATE",permalink:"/docs/Clauses/CREATE"},next:{title:"REMOVE",permalink:"/docs/Clauses/REMOVE"}},i={},s=[{value:"set a property",id:"set-a-property",level:2},{value:"Update a vertex property",id:"update-a-vertex-property",level:3},{value:"Query",id:"query",level:4},{value:"Result",id:"result",level:4},{value:"Update a edge property",id:"update-a-edge-property",level:3},{value:"Query",id:"query-1",level:4},{value:"Result",id:"result-1",level:4},{value:"Update a property",id:"update-a-property",level:3},{value:"Query",id:"query-2",level:4},{value:"Result",id:"result-2",level:4},{value:"Remove a property",id:"remove-a-property",level:3},{value:"Query",id:"query-3",level:4},{value:"Result",id:"result-3",level:4}],u={toc:s},d="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"set-clause"},"SET Clause"),(0,n.kt)("p",null,"The SET clause can be used with a map\u2009\u2014\u2009provided as a literal or a parameter\u2009\u2014\u2009to set properties."),(0,n.kt)("h2",{id:"set-a-property"},"set a property"),(0,n.kt)("h3",{id:"update-a-vertex-property"},"Update a vertex property"),(0,n.kt)("h4",{id:"query"},"Query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('set', $$\n    MATCH (n {name: 'Andy'})\n    SET n.surname = 'Taylor'\n    RETURN n.name, n.surname\n$$) as (v vertex);\n")),(0,n.kt)("p",null,"The newly-changed vertex is returned by the query."),(0,n.kt)("h4",{id:"result"},"Result"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"name"),(0,n.kt)("th",{parentName:"tr",align:"right"},"surname"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},'"Andy"'),(0,n.kt)("td",{parentName:"tr",align:"right"},'"Taylor"')))),(0,n.kt)("h3",{id:"update-a-edge-property"},"Update a edge property"),(0,n.kt)("h4",{id:"query-1"},"Query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('set', $$\n    MATCH (n:Swedish {name: 'Andy'})-[r:KNOWS]->(m)\n    SET r.since = 1999\n    RETURN r, m.name AS friend\n$$) as (r edge, name gtype);\n")),(0,n.kt)("h4",{id:"result-1"},"Result"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"r"),(0,n.kt)("th",{parentName:"tr",align:"right"},"friend"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"{",' id 0, startid: 1, endid: 2, label: "KNOWS", properties: ',"{"," since: 1999 ","}"," ","}"),(0,n.kt)("td",{parentName:"tr",align:"right"},'"Peter"')))),(0,n.kt)("h3",{id:"update-a-property"},"Update a property"),(0,n.kt)("p",null,"SET can be used to update a property on a vertex or edge. This query forces a change of type in the age property:"),(0,n.kt)("h4",{id:"query-2"},"Query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('set', $$\n    MATCH (n {name: 'Andy'})\n    SET n.age = toString(n.age)\n    RETURN n.name, n.age\n$$) as (name gtype, age gtype);\n")),(0,n.kt)("p",null,"The age property has been converted to the string '36'."),(0,n.kt)("h4",{id:"result-2"},"Result"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"name"),(0,n.kt)("th",{parentName:"tr",align:"right"},"age"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},'"Andy"'),(0,n.kt)("td",{parentName:"tr",align:"right"},'"36"')))),(0,n.kt)("h3",{id:"remove-a-property"},"Remove a property"),(0,n.kt)("p",null,"Although REMOVE is normally used to remove a property, it is sometimes convenient to do it using the SET command. A case in point is if the property is provided by a parameter."),(0,n.kt)("h4",{id:"query-3"},"Query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('set', $$\n    MATCH (n {name: 'Andy'})\n    SET n.name = null\n    RETURN n.name, n.age\n$$) as (name gtype, age gtype);\n")),(0,n.kt)("p",null,"The name property is now missing."),(0,n.kt)("h4",{id:"result-3"},"Result"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"name"),(0,n.kt)("th",{parentName:"tr",align:"right"},"age"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"right"},'"36"')))))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[6542],{3905:(e,t,r)=>{r.d(t,{Zo:()=>o,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},o=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=p(r),k=a,g=d["".concat(u,".").concat(k)]||d[k]||m[k]||l;return r?n.createElement(g,i(i({ref:t},o),{},{components:r})):n.createElement(g,i({ref:t},o))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=k;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},8910:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={layout:"default",title:"String Functions",nav_order:1,description:""},i=void 0,s={unversionedId:"Functions/string-functions",id:"Functions/string-functions",title:"String Functions",description:"",source:"@site/docs/04-Functions/08-string-functions.md",sourceDirName:"04-Functions",slug:"/Functions/string-functions",permalink:"/docs/Functions/string-functions",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/04-Functions/08-string-functions.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{layout:"default",title:"String Functions",nav_order:1,description:""},sidebar:"tutorialSidebar",previous:{title:"Trigonometric Functions",permalink:"/docs/Functions/trigonometric-functions"}},u={},p=[{value:"left()",id:"left",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Returns",id:"returns",level:3},{value:"Arguements",id:"arguements",level:3},{value:"Considerations",id:"considerations",level:3},{value:"Example 1. left()",id:"example-1-left",level:3},{value:"Query",id:"query",level:4},{value:"Result",id:"result",level:3},{value:"ltrim()",id:"ltrim",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Arguements",id:"arguements-1",level:3},{value:"Considerations",id:"considerations-1",level:3},{value:"Example 1. ltrim()",id:"example-1-ltrim",level:3},{value:"Query",id:"query-1",level:4},{value:"Result",id:"result-1",level:3},{value:"replace()",id:"replace",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Arguements",id:"arguements-2",level:3},{value:"Considerations",id:"considerations-2",level:3},{value:"Example 1. replace()",id:"example-1-replace",level:3},{value:"Query",id:"query-2",level:4},{value:"Result",id:"result-2",level:3},{value:"reverse()",id:"reverse",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"Arguements",id:"arguements-3",level:3},{value:"Considerations",id:"considerations-3",level:3},{value:"Example 1. reverse",id:"example-1-reverse",level:3},{value:"Query",id:"query-3",level:4},{value:"Result",id:"result-3",level:3},{value:"right()",id:"right",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Returns",id:"returns-4",level:3},{value:"Arguements",id:"arguements-4",level:3},{value:"Considerations",id:"considerations-4",level:3},{value:"Example 1. right()",id:"example-1-right",level:3},{value:"Query",id:"query-4",level:4},{value:"Result",id:"result-4",level:3},{value:"rtrim()",id:"rtrim",level:2},{value:"Syntax",id:"syntax-5",level:3},{value:"Returns",id:"returns-5",level:3},{value:"Arguements",id:"arguements-5",level:3},{value:"Considerations",id:"considerations-5",level:3},{value:"Example 1. rtrim()",id:"example-1-rtrim",level:3},{value:"Query",id:"query-5",level:4},{value:"Result",id:"result-5",level:3},{value:"split()",id:"split",level:2},{value:"Syntax",id:"syntax-6",level:3},{value:"Returns",id:"returns-6",level:3},{value:"Arguements",id:"arguements-6",level:3},{value:"Considerations",id:"considerations-6",level:3},{value:"Example 1. split()",id:"example-1-split",level:3},{value:"Query",id:"query-6",level:4},{value:"Result",id:"result-6",level:3},{value:"substring()",id:"substring",level:2},{value:"Syntax",id:"syntax-7",level:3},{value:"Returns",id:"returns-7",level:3},{value:"Arguements",id:"arguements-7",level:3},{value:"Considerations",id:"considerations-7",level:3},{value:"Example 1. substring()",id:"example-1-substring",level:3},{value:"Query",id:"query-7",level:4},{value:"Result",id:"result-7",level:3},{value:"toLower()",id:"tolower",level:2},{value:"Syntax",id:"syntax-8",level:3},{value:"Returns",id:"returns-8",level:3},{value:"Arguements",id:"arguements-8",level:3},{value:"Considerations",id:"considerations-8",level:3},{value:"Example 1. toLower()",id:"example-1-tolower",level:3},{value:"Query",id:"query-8",level:4},{value:"Result",id:"result-8",level:3},{value:"toString()",id:"tostring",level:2},{value:"Syntax",id:"syntax-9",level:3},{value:"Returns",id:"returns-9",level:3},{value:"Arguements",id:"arguements-9",level:3},{value:"Considerations",id:"considerations-9",level:3},{value:"Example 10. toString()",id:"example-10-tostring",level:3},{value:"Query",id:"query-9",level:4},{value:"Result",id:"result-9",level:3},{value:"toUpper()",id:"toupper",level:2},{value:"Syntax",id:"syntax-10",level:3},{value:"Returns",id:"returns-10",level:3},{value:"Arguements",id:"arguements-10",level:3},{value:"Considerations",id:"considerations-10",level:3},{value:"Example 12. toUpper()",id:"example-12-toupper",level:3},{value:"Query",id:"query-10",level:4},{value:"Result",id:"result-10",level:3},{value:"trim()",id:"trim",level:2},{value:"Syntax",id:"syntax-11",level:3},{value:"Returns",id:"returns-11",level:3},{value:"Arguements",id:"arguements-11",level:3},{value:"Considerations",id:"considerations-11",level:3},{value:"Example 13. trim()",id:"example-13-trim",level:3},{value:"Query",id:"query-11",level:4},{value:"Result",id:"result-11",level:4}],o={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"left"},"left()"),(0,a.kt)("p",null,"left() returns a string containing the specified number of leftmost characters of the original string."),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,"left(original, length)"),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"length"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a positive integer.")))),(0,a.kt)("h3",{id:"considerations"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"left(null, length) return null."),(0,a.kt)("li",{parentName:"ul"},"left(null, null) return null."),(0,a.kt)("li",{parentName:"ul"},"left(original, null) will raise an error."),(0,a.kt)("li",{parentName:"ul"},"If length is not a positive integer, an error is raised."),(0,a.kt)("li",{parentName:"ul"},"If length exceeds the size of original, original is returned.")),(0,a.kt)("h3",{id:"example-1-left"},"Example 1. left()"),(0,a.kt)("h4",{id:"query"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN left('hello', 3)\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hel"')))),(0,a.kt)("h2",{id:"ltrim"},"ltrim()"),(0,a.kt)("p",null,"ltrim() returns the original string with leading whitespace removed."),(0,a.kt)("h3",{id:"syntax-1"},"Syntax"),(0,a.kt)("p",null,"ltrim(original)"),(0,a.kt)("h3",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-1"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-1"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ltrim(null) returns null.")),(0,a.kt)("h3",{id:"example-1-ltrim"},"Example 1. ltrim()"),(0,a.kt)("h4",{id:"query-1"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN ltrim('   hello')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-1"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hello"')))),(0,a.kt)("h2",{id:"replace"},"replace()"),(0,a.kt)("p",null,"replace() returns a string in which all occurrences of a specified string in the original string have been replaced by another (specified) string."),(0,a.kt)("h3",{id:"syntax-2"},"Syntax"),(0,a.kt)("p",null,"replace(original, search, replace)"),(0,a.kt)("h3",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-2"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"search"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that specifies the string to be replaced in original.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"replace"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that specifies the replacement string.")))),(0,a.kt)("h3",{id:"considerations-2"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If any argument is null, null will be returned."),(0,a.kt)("li",{parentName:"ul"},"If search is not found in original, original will be returned.")),(0,a.kt)("h3",{id:"example-1-replace"},"Example 1. replace()"),(0,a.kt)("h4",{id:"query-2"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT * FROM cypher(\'string\', $$\n    RETURN replace("hello", "l", "w")\n$$) as (str gtype);\n')),(0,a.kt)("h3",{id:"result-2"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hewwo"')))),(0,a.kt)("h2",{id:"reverse"},"reverse()"),(0,a.kt)("p",null,"reverse() returns a string in which the order of all characters in the original string have been reversed."),(0,a.kt)("h3",{id:"syntax-3"},"Syntax"),(0,a.kt)("p",null,"reverse(original)"),(0,a.kt)("h3",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-3"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-3"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"reverse(null) returns null.")),(0,a.kt)("h3",{id:"example-1-reverse"},"Example 1. reverse"),(0,a.kt)("h4",{id:"query-3"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN reverse('anagram')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-3"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"margana"')))),(0,a.kt)("h2",{id:"right"},"right()"),(0,a.kt)("p",null,"right() returns a string containing the specified number of rightmost characters of the original string."),(0,a.kt)("h3",{id:"syntax-4"},"Syntax"),(0,a.kt)("p",null,"right(original, length)"),(0,a.kt)("h3",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-4"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"length"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a positive integer.")))),(0,a.kt)("h3",{id:"considerations-4"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"right(null, length) return null."),(0,a.kt)("li",{parentName:"ul"},"right(null, null) return null."),(0,a.kt)("li",{parentName:"ul"},"right(original, null) will raise an error."),(0,a.kt)("li",{parentName:"ul"},"If length is not a positive integer, an error is raised."),(0,a.kt)("li",{parentName:"ul"},"If length exceeds the size of original, original is returned.")),(0,a.kt)("h3",{id:"example-1-right"},"Example 1. right()"),(0,a.kt)("h4",{id:"query-4"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN right('hello', 3)\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-4"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"llo"')))),(0,a.kt)("h2",{id:"rtrim"},"rtrim()"),(0,a.kt)("p",null,"rtrim() returns the original string with trailing whitespace removed."),(0,a.kt)("h3",{id:"syntax-5"},"Syntax"),(0,a.kt)("p",null,"rtrim(original)"),(0,a.kt)("h3",{id:"returns-5"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-5"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-5"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rtrim(null) returns null.")),(0,a.kt)("h3",{id:"example-1-rtrim"},"Example 1. rtrim()"),(0,a.kt)("h4",{id:"query-5"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN rtrim('hello   ')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-5"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hello"')))),(0,a.kt)("h2",{id:"split"},"split()"),(0,a.kt)("p",null,"split() returns a list of strings resulting from the splitting of the original string around matches of the given delimiter."),(0,a.kt)("h3",{id:"syntax-6"},"Syntax"),(0,a.kt)("p",null,"split(original, splitDelimiter)"),(0,a.kt)("h3",{id:"returns-6"},"Returns"),(0,a.kt)("p",null,"A list of Strings."),(0,a.kt)("h3",{id:"arguements-6"},"Arguements"),(0,a.kt)("p",null,"Name \tDescription\n| Name |Description |\n| :--- | :----: |\n| original | An expression that returns a string. |\n| splitDelimiter |\tThe string with which to split original.  |"),(0,a.kt)("h3",{id:"considerations-6"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"split(null, splitDelimiter) return null."),(0,a.kt)("li",{parentName:"ul"},"split(original, null) return null")),(0,a.kt)("h3",{id:"example-1-split"},"Example 1. split()"),(0,a.kt)("h4",{id:"query-6"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN split('one,two', ',')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-6"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'["one","two"]')))),(0,a.kt)("h2",{id:"substring"},"substring()"),(0,a.kt)("p",null,"substring() returns a substring of the original string, beginning with a zero-based index start and length."),(0,a.kt)("h3",{id:"syntax-7"},"Syntax"),(0,a.kt)("p",null,"substring(original, start ","[, length]",")"),(0,a.kt)("h3",{id:"returns-7"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-7"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"start"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a positive integer, denoting the position at which the substring will begin.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"length"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a positive integer, denoting how many characters of original will be returned.")))),(0,a.kt)("h3",{id:"considerations-7"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"start uses a zero-based index."),(0,a.kt)("li",{parentName:"ul"},"If length is omitted, the function returns the substring starting at the position given by start and extending to the end of original."),(0,a.kt)("li",{parentName:"ul"},"If original is null, null is returned."),(0,a.kt)("li",{parentName:"ul"},"If either start or length is null or a negative integer, an error is raised."),(0,a.kt)("li",{parentName:"ul"},"If start is 0, the substring will start at the beginning of original."),(0,a.kt)("li",{parentName:"ul"},"If length is 0, the empty string will be returned.")),(0,a.kt)("h3",{id:"example-1-substring"},"Example 1. substring()"),(0,a.kt)("h4",{id:"query-7"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN substring('hello', 1, 3), substring('hello', 2)\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-7"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"ell"'),(0,a.kt)("td",{parentName:"tr",align:null},'"llo"')))),(0,a.kt)("h2",{id:"tolower"},"toLower()"),(0,a.kt)("p",null,"toLower() returns the original string in lowercase."),(0,a.kt)("h3",{id:"syntax-8"},"Syntax"),(0,a.kt)("p",null,"toLower(original)"),(0,a.kt)("h3",{id:"returns-8"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-8"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-8"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"toLower(null) returns null.")),(0,a.kt)("h3",{id:"example-1-tolower"},"Example 1. toLower()"),(0,a.kt)("h4",{id:"query-8"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN toLower('HELLO')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-8"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hello"')))),(0,a.kt)("h2",{id:"tostring"},"toString()"),(0,a.kt)("p",null,"toString() converts an integer, float, boolean, string, point, duration, date, time, localtime, localdatetime, or datetime value to a string."),(0,a.kt)("h3",{id:"syntax-9"},"Syntax"),(0,a.kt)("p",null,"toString(expression)"),(0,a.kt)("h3",{id:"returns-9"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-9"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a number, a boolean, or string")))),(0,a.kt)("h3",{id:"considerations-9"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"toString(null) returns null."),(0,a.kt)("li",{parentName:"ul"},"If expression is a string, it will be returned unchanged.")),(0,a.kt)("h3",{id:"example-10-tostring"},"Example 10. toString()"),(0,a.kt)("h4",{id:"query-9"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN\n  toString(11.5),\n  toString('already a string'),\n  toString(true)\n$$) as (str1 gtype, str2 gtype, str3 gtype);\n")),(0,a.kt)("h3",{id:"result-9"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str1"),(0,a.kt)("th",{parentName:"tr",align:null},"str2"),(0,a.kt)("th",{parentName:"tr",align:null},"str3"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"11.5"'),(0,a.kt)("td",{parentName:"tr",align:null},'"already a string"'),(0,a.kt)("td",{parentName:"tr",align:null},'"true"')))),(0,a.kt)("h2",{id:"toupper"},"toUpper()"),(0,a.kt)("p",null,"toUpper() returns the original string in uppercase."),(0,a.kt)("h3",{id:"syntax-10"},"Syntax"),(0,a.kt)("p",null,"toUpper(original)"),(0,a.kt)("h3",{id:"returns-10"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-10"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-10"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"toUpper(null) returns null.")),(0,a.kt)("h3",{id:"example-12-toupper"},"Example 12. toUpper()"),(0,a.kt)("h4",{id:"query-10"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN toUpper('hello')\n$$) as (str gtype);\n")),(0,a.kt)("h3",{id:"result-10"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"HELLO"')))),(0,a.kt)("h2",{id:"trim"},"trim()"),(0,a.kt)("p",null,"trim() returns the original string with leading and trailing whitespace removed."),(0,a.kt)("h3",{id:"syntax-11"},"Syntax"),(0,a.kt)("p",null,"trim(original)"),(0,a.kt)("h3",{id:"returns-11"},"Returns"),(0,a.kt)("p",null,"A String."),(0,a.kt)("h3",{id:"arguements-11"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"original"),(0,a.kt)("td",{parentName:"tr",align:"center"},"An expression that returns a string.")))),(0,a.kt)("h3",{id:"considerations-11"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"trim(null) returns null.")),(0,a.kt)("h3",{id:"example-13-trim"},"Example 13. trim()"),(0,a.kt)("h4",{id:"query-11"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('string', $$\n    RETURN trim('   hello   ')\n$$) as (str gtype);\n")),(0,a.kt)("h4",{id:"result-11"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"str"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},'"hello"')))))}m.isMDXComponent=!0}}]);
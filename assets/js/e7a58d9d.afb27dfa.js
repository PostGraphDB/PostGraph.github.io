"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[8372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),k=a,c=d["".concat(u,".").concat(k)]||d[k]||m[k]||l;return n?r.createElement(c,i(i({ref:t},p),{},{components:n})):r.createElement(c,i({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={layout:"default",title:"Logarithmic",nav_order:6,description:""},i=void 0,o={unversionedId:"Functions/logarithmic-functions",id:"Functions/logarithmic-functions",title:"Logarithmic",description:"",source:"@site/docs/04-Functions/06-logarithmic-functions.md",sourceDirName:"04-Functions",slug:"/Functions/logarithmic-functions",permalink:"/docs/Functions/logarithmic-functions",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/04-Functions/06-logarithmic-functions.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{layout:"default",title:"Logarithmic",nav_order:6,description:""},sidebar:"tutorialSidebar",previous:{title:"Aggregating Functions",permalink:"/docs/Functions/aggregating-functions"},next:{title:"Trigonometric Functions",permalink:"/docs/Functions/trigonometric-functions"}},u={},s=[{value:"e()",id:"e",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Returns",id:"returns",level:3},{value:"Example 1. e()",id:"example-1-e",level:3},{value:"Query",id:"query",level:4},{value:"Result",id:"result",level:3},{value:"exp()",id:"exp",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Arguements",id:"arguements",level:3},{value:"Considerations",id:"considerations",level:3},{value:"Example 1. exp()",id:"example-1-exp",level:3},{value:"Query",id:"query-1",level:4},{value:"Result",id:"result-1",level:3},{value:"log()",id:"log",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Arguements",id:"arguements-1",level:3},{value:"Considerations",id:"considerations-1",level:3},{value:"Example 1. log()",id:"example-1-log",level:3},{value:"Query",id:"query-2",level:4},{value:"Result",id:"result-2",level:3},{value:"log10()",id:"log10",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"Arguements",id:"arguements-2",level:3},{value:"Considerations",id:"considerations-2",level:3},{value:"Example 1. log10()",id:"example-1-log10",level:3},{value:"Query",id:"query-3",level:4},{value:"Result",id:"result-3",level:3},{value:"sqrt()",id:"sqrt",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Returns",id:"returns-4",level:3},{value:"Arguements",id:"arguements-3",level:3},{value:"Considerations",id:"considerations-3",level:3},{value:"Example 1. sqrt()",id:"example-1-sqrt",level:3},{value:"Query",id:"query-4",level:4},{value:"Result",id:"result-4",level:3}],p={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"These functions all operate on numeric expressions only, and will return an error if used on any other values. See also Mathematical operators."),(0,a.kt)("h2",{id:"e"},"e()"),(0,a.kt)("p",null,"e() returns the base of the natural logarithm, e."),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"e()")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"A Float."),(0,a.kt)("h3",{id:"example-1-e"},"Example 1. e()"),(0,a.kt)("h4",{id:"query"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('logarithmic', $$\n    RETURN e()\n$$) as (e gtype);\n")),(0,a.kt)("p",null,"The base of the natural logarithm, e, is returned."),(0,a.kt)("h3",{id:"result"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"ceil"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"2.718281828459045")))),(0,a.kt)("h2",{id:"exp"},"exp()"),(0,a.kt)("p",null,"exp() returns en, where e is the base of the natural logarithm, and n is the value of the argument expression."),(0,a.kt)("h3",{id:"syntax-1"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"e(expression)")),(0,a.kt)("h3",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,a.kt)("h3",{id:"arguements"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,a.kt)("h3",{id:"considerations"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"exp(null) returns null.")),(0,a.kt)("h3",{id:"example-1-exp"},"Example 1. exp()"),(0,a.kt)("h4",{id:"query-1"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('logarithmic', $$\n    RETURN exp(2)\n$$) as (exp gtype);\n")),(0,a.kt)("p",null,"e to the power of 2 is returned."),(0,a.kt)("h3",{id:"result-1"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"ceil"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"7.38905609893065")))),(0,a.kt)("h2",{id:"log"},"log()"),(0,a.kt)("p",null,"log() returns the natural logarithm of a number."),(0,a.kt)("h3",{id:"syntax-2"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"log(expression)")),(0,a.kt)("h3",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,a.kt)("h3",{id:"arguements-1"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,a.kt)("h3",{id:"considerations-1"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"log(null) returns null."),(0,a.kt)("li",{parentName:"ul"},"log(0) returns null.")),(0,a.kt)("h3",{id:"example-1-log"},"Example 1. log()"),(0,a.kt)("h4",{id:"query-2"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('logarithmic', $$\n    RETURN log(27)\n$$) as (log gtype);\n")),(0,a.kt)("p",null,"The natural logarithm of 27 is returned."),(0,a.kt)("h3",{id:"result-2"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"ceil"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"3.295836866004329")))),(0,a.kt)("h2",{id:"log10"},"log10()"),(0,a.kt)("p",null,"log10() returns the common logarithm (base 10) of a number."),(0,a.kt)("h3",{id:"syntax-3"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"log10(expression)")),(0,a.kt)("h3",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,a.kt)("h3",{id:"arguements-2"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,a.kt)("h3",{id:"considerations-2"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"log10(null) returns null."),(0,a.kt)("li",{parentName:"ul"},"log10(0) returns null.")),(0,a.kt)("h3",{id:"example-1-log10"},"Example 1. log10()"),(0,a.kt)("h4",{id:"query-3"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('logarithmic', $$\n    RETURN log10(27)\n$$) as (log10 gtype);\n")),(0,a.kt)("p",null,"The common logarithm of 27 is returned."),(0,a.kt)("h3",{id:"result-3"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"log10"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"1.4313637641589874")))),(0,a.kt)("h2",{id:"sqrt"},"sqrt()"),(0,a.kt)("p",null,"sqrt() returns the square root of a number."),(0,a.kt)("h3",{id:"syntax-4"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sqrt(expression)")),(0,a.kt)("h3",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,a.kt)("h3",{id:"arguements-3"},"Arguements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,a.kt)("h3",{id:"considerations-3"},"Considerations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"sqrt(null) returns null.")),(0,a.kt)("h3",{id:"example-1-sqrt"},"Example 1. sqrt()"),(0,a.kt)("h4",{id:"query-4"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('logarithmic', $$\n    RETURN sqrt(256)\n$$) as (sqrt gtype);\n")),(0,a.kt)("p",null,"The square root of 256 is returned."),(0,a.kt)("h3",{id:"result-4"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"sqrt"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"16.0")))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[6839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=o(n),k=r,c=d["".concat(s,".").concat(k)]||d[k]||m[k]||l;return n?a.createElement(c,i(i({ref:t},p),{},{components:n})):a.createElement(c,i({ref:t},p))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:r,i[1]=u;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={layout:"default",title:"Numeric Functions",nav_order:1,description:"These functions all operate on numeric expressions only, and will return an error if used on any other values."},i="Numeric Functions",u={unversionedId:"Functions/numeric-functions",id:"Functions/numeric-functions",title:"Numeric Functions",description:"These functions all operate on numeric expressions only, and will return an error if used on any other values.",source:"@site/docs/04-Functions/04-numeric-functions.md",sourceDirName:"04-Functions",slug:"/Functions/numeric-functions",permalink:"/docs/Functions/numeric-functions",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/04-Functions/04-numeric-functions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{layout:"default",title:"Numeric Functions",nav_order:1,description:"These functions all operate on numeric expressions only, and will return an error if used on any other values."},sidebar:"tutorialSidebar",previous:{title:"List Functions",permalink:"/docs/Functions/list-functions"},next:{title:"Aggregating Functions",permalink:"/docs/Functions/aggregating-functions"}},s={},o=[{value:"Abs()",id:"abs",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Returns",id:"returns",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Considerations",id:"considerations",level:3},{value:"Example 1. abs()",id:"example-1-abs",level:3},{value:"Query",id:"query",level:4},{value:"Result",id:"result",level:4},{value:"ceil()",id:"ceil",level:2},{value:"Syntax:",id:"syntax-1",level:3},{value:"Returns:",id:"returns-1",level:3},{value:"Arguments:",id:"arguments-1",level:3},{value:"Considerations:",id:"considerations-1",level:3},{value:"Example 2. ceil()",id:"example-2-ceil",level:3},{value:"Query",id:"query-1",level:4},{value:"Result",id:"result-1",level:4},{value:"floor()",id:"floor",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Arguments",id:"arguments-2",level:3},{value:"Considerations",id:"considerations-2",level:3},{value:"Example 1. floor()",id:"example-1-floor",level:3},{value:"Query",id:"query-2",level:4},{value:"Result",id:"result-2",level:4},{value:"rand()",id:"rand",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"Example 1. rand()",id:"example-1-rand",level:3},{value:"Query",id:"query-3",level:4},{value:"Result",id:"result-3",level:4},{value:"round()",id:"round",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Returns",id:"returns-4",level:3},{value:"Arguments",id:"arguments-3",level:3},{value:"Considerations",id:"considerations-3",level:3},{value:"Example 1. round()",id:"example-1-round",level:3},{value:"Query",id:"query-4",level:4},{value:"Result",id:"result-4",level:4},{value:"sign()",id:"sign",level:2},{value:"Syntax",id:"syntax-5",level:3},{value:"Returns",id:"returns-5",level:3},{value:"Arguments",id:"arguments-4",level:3},{value:"Considerations",id:"considerations-4",level:3},{value:"Example 1. sign()",id:"example-1-sign",level:3},{value:"Query",id:"query-5",level:4},{value:"Result",id:"result-5",level:4}],p={toc:o},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"numeric-functions"},"Numeric Functions"),(0,r.kt)("p",null,"These functions all operate on numeric expressions only, and will return an error if used on any other values."),(0,r.kt)("h2",{id:"abs"},"Abs()"),(0,r.kt)("p",null,"abs() returns the absolute value of the given number."),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"abs(expression)")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"The type of the value returned will be that of expression.")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,r.kt)("h3",{id:"considerations"},"Considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"abs(null) returns null."),(0,r.kt)("li",{parentName:"ul"},"If expression is negative, -(expression) (i.e. the negation of expression) is returned.")),(0,r.kt)("h3",{id:"example-1-abs"},"Example 1. abs()"),(0,r.kt)("h4",{id:"query"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\n    MATCH (a), (e)\n    WHERE a.name = 'Alice' AND e.name = 'Eskil'\n    RETURN a.age, e.age, abs(a.age - e.age)\n$$) as (a_age gtype, e_type, diff_age);\n")),(0,r.kt)("p",null,"The absolute value of the age difference is returned."),(0,r.kt)("h4",{id:"result"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"a_age"),(0,r.kt)("th",{parentName:"tr",align:"center"},"e_age"),(0,r.kt)("th",{parentName:"tr",align:"right"},"diff_age"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"38"),(0,r.kt)("td",{parentName:"tr",align:"center"},"41"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3")))),(0,r.kt)("h2",{id:"ceil"},"ceil()"),(0,r.kt)("p",null,"ceil() returns the smallest floating point number that is greater than or equal to the given number and equal to a mathematical integer."),(0,r.kt)("h3",{id:"syntax-1"},"Syntax:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ceil(expression)")),(0,r.kt)("h3",{id:"returns-1"},"Returns:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,r.kt)("h3",{id:"arguments-1"},"Arguments:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,r.kt)("h3",{id:"considerations-1"},"Considerations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ceil(null) returns null.")),(0,r.kt)("h3",{id:"example-2-ceil"},"Example 2. ceil()"),(0,r.kt)("h4",{id:"query-1"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\nRETURN ceil(0.1)\n$$) as (ceil gtype);\n")),(0,r.kt)("p",null,"The ceil of 0.1 is returned."),(0,r.kt)("h4",{id:"result-1"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"ceil"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,r.kt)("h2",{id:"floor"},"floor()"),(0,r.kt)("p",null,"floor() returns the largest floating point number that is less than or equal to the given number and equal to a mathematical integer."),(0,r.kt)("h3",{id:"syntax-2"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"floor(expression)")),(0,r.kt)("h3",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,r.kt)("h3",{id:"arguments-2"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,r.kt)("h3",{id:"considerations-2"},"Considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"floor(null) returns null.")),(0,r.kt)("h3",{id:"example-1-floor"},"Example 1. floor()"),(0,r.kt)("h4",{id:"query-2"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\nRETURN floor(0.9)\n$$) as (ceil gtype);\n")),(0,r.kt)("p",null,"The floor of 0.9 is returned."),(0,r.kt)("h4",{id:"result-2"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"floor"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0")))),(0,r.kt)("h2",{id:"rand"},"rand()"),(0,r.kt)("p",null,"rand() returns a random floating point number in the range from 0 (inclusive) to 1 (exclusive); i.e. [0,1). The numbers returned follow an approximate uniform distribution."),(0,r.kt)("h3",{id:"syntax-3"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"rand()")),(0,r.kt)("h3",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,r.kt)("h3",{id:"example-1-rand"},"Example 1. rand()"),(0,r.kt)("h4",{id:"query-3"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\nRETURN rand()\n$$) as (ceil gtype);\n")),(0,r.kt)("p",null,"A random number is returned."),(0,r.kt)("h4",{id:"result-3"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"rand"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"0.5460251846326871")))),(0,r.kt)("h2",{id:"round"},"round()"),(0,r.kt)("p",null,"round() returns the value of the given number rounded to the nearest integer, with ties always rounded towards positive infinity."),(0,r.kt)("h3",{id:"syntax-4"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"round(expression)")),(0,r.kt)("h3",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"A Float.")),(0,r.kt)("h3",{id:"arguments-3"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,r.kt)("h3",{id:"considerations-3"},"Considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"round(null) returns null.")),(0,r.kt)("h3",{id:"example-1-round"},"Example 1. round()"),(0,r.kt)("h4",{id:"query-4"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\nRETURN round(3.141592)\n$$) as (ceil gtype);\n")),(0,r.kt)("p",null,"3.0 is returned."),(0,r.kt)("h4",{id:"result-4"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"rand"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"3.0")))),(0,r.kt)("h2",{id:"sign"},"sign()"),(0,r.kt)("p",null,"sign() returns the signum of the given number: 0 if the number is 0, -1 for any negative number, and 1 for any positive number."),(0,r.kt)("h3",{id:"syntax-5"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sign(expression)")),(0,r.kt)("h3",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"An Integer.")),(0,r.kt)("h3",{id:"arguments-4"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("td",{parentName:"tr",align:"center"},"A numeric expression.")))),(0,r.kt)("h3",{id:"considerations-4"},"Considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sign(null) returns null.")),(0,r.kt)("h3",{id:"example-1-sign"},"Example 1. sign()"),(0,r.kt)("h4",{id:"query-5"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('numeric', $$\n     RETURN sign(-17), sign(0.1)\n$$) as (neg_sign gtype, pos_sign gtype);\n")),(0,r.kt)("p",null,"The signs of -17 and 0.1 are returned."),(0,r.kt)("h4",{id:"result-5"},"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"neg_sign"),(0,r.kt)("th",{parentName:"tr",align:null},"pos_sign"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-1"),(0,r.kt)("td",{parentName:"tr",align:null},"1")))))}m.isMDXComponent=!0}}]);
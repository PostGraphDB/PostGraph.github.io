"use strict";(self.webpackChunkpostgraph_web=self.webpackChunkpostgraph_web||[]).push([[8278],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,y=c["".concat(i,".").concat(m)]||c[m]||d[m]||l;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1806:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const l={layout:"default",title:"LIMIT",nav_order:6,description:"LIMIT constrains the number of returned rows."},o="LIMIT",s={unversionedId:"Clauses/LIMIT",id:"Clauses/LIMIT",title:"LIMIT",description:"LIMIT constrains the number of returned rows.",source:"@site/docs/03-Clauses/12-LIMIT.md",sourceDirName:"03-Clauses",slug:"/Clauses/LIMIT",permalink:"/docs/Clauses/LIMIT",draft:!1,editUrl:"https://github.com/postgraphdb/postgraphdb.github.io/tree/code/docs/03-Clauses/12-LIMIT.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{layout:"default",title:"LIMIT",nav_order:6,description:"LIMIT constrains the number of returned rows."},sidebar:"tutorialSidebar",previous:{title:"WHERE",permalink:"/docs/Clauses/WHERE"},next:{title:"ORDER BY",permalink:"/docs/Clauses/ORDER_BY"}},i={},u=[{value:"Return a limited subset of the rows",id:"return-a-limited-subset-of-the-rows",level:2},{value:"Query",id:"query",level:3},{value:"Result",id:"result",level:3},{value:"Using an expression with LIMIT to return a subset of the rows",id:"using-an-expression-with-limit-to-return-a-subset-of-the-rows",level:2},{value:"Query",id:"query-1",level:3},{value:"Result",id:"result-1",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"limit"},"LIMIT"),(0,a.kt)("p",null,"LIMIT accepts any expression that evaluates to a positive integer and does not refer to nodes or relationships."),(0,a.kt)("h2",{id:"return-a-limited-subset-of-the-rows"},"Return a limited subset of the rows"),(0,a.kt)("p",null,"To return a limited subset of the rows, use this syntax:"),(0,a.kt)("h3",{id:"query"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('limit', $$\nMATCH (n)\nRETURN n.name\nORDER BY n.name\nLIMIT 3\n$$) as (name gtype);\n")),(0,a.kt)("p",null,"Limit to 3 rows by the example query."),(0,a.kt)("h3",{id:"result"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"A"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"B"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"C"')))),(0,a.kt)("h2",{id:"using-an-expression-with-limit-to-return-a-subset-of-the-rows"},"Using an expression with LIMIT to return a subset of the rows"),(0,a.kt)("p",null,"LIMIT accepts any expression that evaluates to a positive integer, as long as it can be statically calculated (i.e. calculated before the query is run)."),(0,a.kt)("h3",{id:"query-1"},"Query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM cypher('limit', $$\nMATCH (n)\nRETURN n.name\nORDER BY n.name\nLIMIT 1 + toInteger(3 * rand())\n$$) as (name gtype);\n")),(0,a.kt)("p",null,"Limit 1 row plus randomly 0, 1, or 2. So randomly limit to 1, 2, or 3 rows."),(0,a.kt)("h3",{id:"result-1"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"A"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"B"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},'"C"')))))}d.isMDXComponent=!0}}]);